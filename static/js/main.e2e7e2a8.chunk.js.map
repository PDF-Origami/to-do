{"version":3,"sources":["Task.js","AddTask.js","App.js","serviceWorker.js","index.js"],"names":["Task","this","handleRename","e","props","toggleRenameMode","name","input","target","parentElement","querySelector","focus","addEventListener","renameTask","value","key","elem","className","blur","children","removeTask","toggleTask","console","log","focusChanged","classList","contains","previousElementSibling","nextElementSibling","tagName","renameField","type","defaultValue","spellCheck","ref","tabIndex","role","completed","renaming","React","Component","AddTask","handleAddEvent","bind","addTask","onKeyDown","placeholder","aria-label","onClick","title","ToDo","state","tasks","localStorage","getItem","JSON","parse","taskCounter","parseInt","error","length","newToDo","id","setState","copy","index","indexOf","find","task","splice","newName","setItem","stringify","completedTasks","push","Array","isArray","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.e2e7e2a8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class Task extends React.Component {\r\n\tcomponentDidMount() {\r\n\t\tlet Task = this;\r\n\r\n\t\tfunction handleRename(e) {\r\n\t\t\tif (Task.props.toggleRenameMode(Task.props.name)) {\r\n\t\t\t\tconst input = e.target.parentElement.parentElement.querySelector(\r\n\t\t\t\t\t'input'\r\n\t\t\t\t);\r\n\r\n\t\t\t\tinput.focus();\r\n\t\t\t\tinput.addEventListener('blur', e => {\r\n\t\t\t\t\tTask.props.renameTask(Task.props.name, input.value);\r\n\t\t\t\t\tTask.props.toggleRenameMode(Task.props.name);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tinput.addEventListener('keydown', e => {\r\n\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\tTask.props.toggleRenameMode(Task.props.name);\r\n\t\t\t\t\t\tTask.props.renameTask(Task.props.name, input.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} // toggleRenameMode returns current 'renaming' state\r\n\r\n\t\tthis.elem.parentElement.addEventListener('keydown', e => {\r\n\t\t\tif (\r\n\t\t\t\te.key === 'ArrowDown' &&\r\n\t\t\t\te.target.parentElement.className === 'Task-container'\r\n\t\t\t) {\r\n\t\t\t\te.target.blur();\r\n\t\t\t\te.target.children[0].focus();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.elem.addEventListener('click', function(e) {\r\n\t\t\tif (e.target.className === 'fas fa-times') {\r\n\t\t\t\tTask.props.removeTask(Task.props.name);\r\n\t\t\t} else if (e.target.className === 'fas fa-pencil-alt') {\r\n\t\t\t\thandleRename(e);\r\n\t\t\t} else {\r\n\t\t\t\tif (e.target.className !== 'rename-input') {\r\n\t\t\t\t\tTask.props.toggleTask(Task.props.name);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.elem.addEventListener('keydown', function(e) {\r\n\t\t\tconsole.log(e.target);\r\n\t\t\tlet focusChanged = false;\r\n\r\n\t\t\tfunction focus(elem) {\r\n\t\t\t\tif (elem != null) {\r\n\t\t\t\t\telem.focus();\r\n\t\t\t\t\tfocusChanged = true;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (e.target.classList.contains('Task')) {\r\n\t\t\t\tswitch (\r\n\t\t\t\t\te.key // Move up or down the list, or select Task options\r\n\t\t\t\t) {\r\n\t\t\t\t\tcase 'ArrowUp':\r\n\t\t\t\t\t\tfocus(e.target.previousElementSibling);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'ArrowDown':\r\n\t\t\t\t\t\tfocus(e.target.nextElementSibling);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'ArrowRight':\r\n\t\t\t\t\t\tfocus(e.target.children[1].children[0]);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'Enter':\r\n\t\t\t\t\t\te.target.parentElement.focus();\r\n\t\t\t\t\t\tTask.props.toggleTask(Task.props.name);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t}\r\n\t\t\t} else if (e.target.tagName === 'I') {\r\n\t\t\t\tswitch (e.key) {\r\n\t\t\t\t\tcase 'ArrowRight':\r\n\t\t\t\t\t\tfocus(e.target.nextElementSibling);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'ArrowLeft':\r\n\t\t\t\t\t\tif (!focus(e.target.previousElementSibling)) {\r\n\t\t\t\t\t\t\tfocus(e.target.parentElement.parentElement);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'Enter':\r\n\t\t\t\t\t\tif (e.target.className === 'fas fa-times') {\r\n\t\t\t\t\t\t\te.target.parentElement.parentElement.parentElement.focus();\r\n\t\t\t\t\t\t\tTask.props.removeTask(Task.props.name);\r\n\t\t\t\t\t\t} else if (e.target.className === 'fas fa-pencil-alt') {\r\n\t\t\t\t\t\t\thandleRename(e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (focusChanged) {\r\n\t\t\t\te.target.blur();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet renameField = (\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tdefaultValue={this.props.name}\r\n\t\t\t\tspellCheck=\"false\"\r\n\t\t\t\tclassName=\"rename-input\"\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tref={elem => (this.elem = elem)}\r\n\t\t\t\ttabIndex=\"-1\"\r\n\t\t\t\trole=\"button\"\r\n\t\t\t\tclassName={this.props.completed ? 'Task completed' : 'Task'}\r\n\t\t\t>\r\n\t\t\t\t<span className=\"Task-left-span\">\r\n\t\t\t\t\t<i\r\n\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\tthis.props.completed ? 'fas fa-check-square' : 'far fa-square'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t></i>\r\n\t\t\t\t\t{this.props.renaming ? renameField : <span>{this.props.name}</span>}\r\n\t\t\t\t</span>\r\n\t\t\t\t<span className=\"Task-right-span\">\r\n\t\t\t\t\t<i className=\"fas fa-arrows-alt-v\" tabIndex=\"-1\"></i>\r\n\t\t\t\t\t<i className=\"fas fa-pencil-alt\" tabIndex=\"-1\"></i>\r\n\t\t\t\t\t<i className=\"fas fa-times\" tabIndex=\"-1\"></i>\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\n\r\nexport default class AddTask extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.handleAddEvent = this.handleAddEvent.bind(this);\r\n\t}\r\n\r\n\thandleAddEvent(e) {\r\n\t\tswitch (e.target.tagName) {\r\n\t\t\tcase 'BUTTON':\r\n\t\t\t\tthis.props.addTask(e.target.previousElementSibling.value);\r\n\t\t\t\te.target.previousElementSibling.value = '';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'INPUT':\r\n\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\tthis.props.addTask(e.target.value);\r\n\t\t\t\t\te.target.value = '';\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"add-task-cont\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tonKeyDown={this.handleAddEvent}\r\n\t\t\t\t\tplaceholder=\"Add task\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\taria-label=\"Add task\"\r\n\t\t\t\t\tclassName=\"add-task-input\"\r\n\t\t\t\t/>\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={this.handleAddEvent}\r\n\t\t\t\t\ttitle=\"Add task (click or enter)\"\r\n\t\t\t\t\tclassName=\"add-task-button\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<i className=\"fas fa-plus\"></i>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Task from './Task';\nimport AddTask from './AddTask';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"background\">\n\t\t\t\t<ToDo />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nclass ToDo extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.addTask = this.addTask.bind(this);\n\t\tthis.removeTask = this.removeTask.bind(this);\n\t\tthis.toggleTask = this.toggleTask.bind(this);\n\t\tthis.renameTask = this.renameTask.bind(this);\n\t\tthis.toggleRenameMode = this.toggleRenameMode.bind(this);\n\n\t\tthis.state = {\n\t\t\ttasks: localStorage.getItem('tasks')\n\t\t\t\t? JSON.parse(localStorage.getItem('tasks'))\n\t\t\t\t: [],\n\n\t\t\ttaskCounter: localStorage.getItem('taskCounter')\n\t\t\t\t? parseInt(localStorage.getItem('taskCounter'))\n\t\t\t\t: 0,\n\n\t\t\terror: null,\n\t\t};\n\t}\n\n\taddTask(name) {\n\t\tif (name.length > 0) {\n\t\t\tconst newToDo = {\n\t\t\t\tname,\n\t\t\t\tcompleted: false,\n\t\t\t\tid: this.state.taskCounter,\n\t\t\t\trenaming: false,\n\t\t\t};\n\n\t\t\tthis.setState({ taskCounter: this.state.taskCounter + 1 });\n\t\t\tthis.setState({ tasks: [...this.state.tasks, newToDo], error: null });\n\t\t} else {\n      this.setState({ error: 'Task name can\\'t be empty.' });\n\t\t}\n\t}\n\n\tremoveTask(name) {\n\t\tconst copy = [...this.state.tasks];\n\t\tconst index = copy.indexOf(copy.find(task => task.name === name));\n\t\tif (index !== -1) {\n\t\t\tcopy.splice(index, 1);\n\t\t\tthis.setState({ tasks: copy });\n\t\t}\n\t}\n\n\ttoggleTask(name) {\n\t\tconst copy = [...this.state.tasks];\n\t\tconst index = copy.indexOf(copy.find(task => task.name === name));\n\t\tif (index !== -1) {\n\t\t\tcopy[index].completed = !copy[index].completed;\n\t\t\tthis.setState({ tasks: copy });\n\t\t}\n\t}\n\n\ttoggleRenameMode(name) {\n\t\tconst copy = [...this.state.tasks];\n\t\tconst index = copy.indexOf(copy.find(task => task.name === name));\n\t\tif (index !== -1) {\n\t\t\tcopy[index].renaming = !copy[index].renaming;\n\t\t\tthis.setState({ tasks: copy });\n\t\t\treturn copy[index].renaming;\n\t\t}\n\t}\n\n\trenameTask(name, newName) {\n\t\tconst copy = [...this.state.tasks];\n\t\tlet index = copy.indexOf(copy.find(task => task.name === name));\n\t\tif (index !== -1) {\n\t\t\tcopy[index].name = newName;\n\t\t\tthis.setState({ tasks: copy });\n\t\t}\n\t}\n\n\trender() {\n\t\t// Populate lists, wrap them with container if they're not empty\n\t\tlocalStorage.setItem('tasks', JSON.stringify(this.state.tasks));\n\t\tlocalStorage.setItem('taskCounter', this.state.taskCounter);\n\n\t\tlet tasks = [];\n\t\tlet completedTasks = [];\n\n\t\tfor (let task of this.state.tasks) {\n\t\t\ttask = (\n\t\t\t\t<Task\n\t\t\t\t\tkey={task.id}\n\t\t\t\t\tname={task.name}\n\t\t\t\t\tremoveTask={this.removeTask}\n\t\t\t\t\trenameTask={this.renameTask}\n\t\t\t\t\ttoggleTask={this.toggleTask}\n\t\t\t\t\ttoggleRenameMode={this.toggleRenameMode}\n\t\t\t\t\tcompleted={task.completed}\n\t\t\t\t\trenaming={task.renaming}\n\t\t\t\t></Task>\n\t\t\t);\n\t\t\tif (!task.props.completed) {\n\t\t\t\ttasks.push(task);\n\t\t\t} else {\n\t\t\t\tcompletedTasks.push(task);\n\t\t\t}\n\t\t}\n\n\t\tif (tasks.length > 0) {\n\t\t\ttasks = (\n\t\t\t\t<div className=\"Task-list\" tabIndex=\"0\">\n\t\t\t\t\t{tasks}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\tif (completedTasks.length > 0) {\n\t\t\tcompletedTasks = (\n\t\t\t\t<div\n\t\t\t\t\tclassName={\n\t\t\t\t\t\t// Only render border if both lists are present\n\t\t\t\t\t\t!Array.isArray(tasks)\n\t\t\t\t\t\t\t? 'has-border completed-Task-list'\n\t\t\t\t\t\t\t: 'completed-Task-list'\n\t\t\t\t\t}\n\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t>\n\t\t\t\t\t{completedTasks}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"ToDo card\">\n\t\t\t\t<main>\n\t\t\t\t\t<div className=\"card-header\">\n\t\t\t\t\t\t<span className=\"header-title\">To-do list</span>\n\t\t\t\t\t\t<span className=\"header-warning\">{this.state.error}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<AddTask addTask={this.addTask}></AddTask>\n\t\t\t\t\t<div className=\"Task-container\">\n\t\t\t\t\t\t{tasks}\n\t\t\t\t\t\t{completedTasks}\n\t\t\t\t\t</div>\n\t\t\t\t</main>\n\t\t\t\t<footer>Made by PDF_Origami</footer>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}